import { query } from "./db";
import sql from 'mssql';

const createAutoGeneratedNumber = async (branchId: number, autoGenerateSuffix: string) => {
  let insertSql = `
    insert into imasterprofiles..AutoGenerateNumber (
      ref_name,
      current_value
    ) 
    select 
      ltrim(rtrim(b.branch_code)) + '-${autoGenerateSuffix}' as ref_name,
      1 as current_value
    from imasterprofiles..branch b where b.branch_id = @branch_id
  `;
  await query(insertSql, [
    {name: 'branch_id', type: sql.BigInt, value: branchId},
  ]);
  return 1;
};

export async function getAutoGeneratedNumber(branchId: number, autoGenerateSuffix: string) {
  let querySql = `
    select current_value 
    from imasterprofiles..AutoGenerateNumber 
    where ref_name=(select top 1 ltrim(rtrim(b.branch_code)) + '-${autoGenerateSuffix}' from imasterprofiles..branch b where b.branch_id = @branch_id)
  `;
  
  let resultSet = await query(querySql, [
    {name: 'branch_id', type: sql.BigInt, value: branchId}
  ]);

  let data = resultSet?.recordset[0]?.current_value;  
  if (typeof data === 'undefined') {
    data = await createAutoGeneratedNumber(branchId, autoGenerateSuffix);  
  }
  return data;
}

export async function incAutoGeneratedNumber(branch: number, autoGenerateSuffix: string) {
  let updateSql = `
    update imasterprofiles..AutoGenerateNumber
    set current_value = isnull(current_value, 0) + 1
    where ref_name = (select top 1 ltrim(rtrim(b.branch_code)) + '-${autoGenerateSuffix}' from imasterprofiles..branch b where b.branch_id = @branch_id)
  `;
  await query(updateSql, [
    {name: 'branch_id', type: sql.BigInt, value: branch}
  ]);

}

